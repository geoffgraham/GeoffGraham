{
  "{\"sourceRoot\":\"/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02\",\"filename\":\"/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02",
      "filename": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.watchForChanges = exports.copy = exports.images = exports.scripts = exports.styles = exports.reload = exports.serve = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://geoff.dev\"\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/scss/style.scss']).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpPostcss[\"default\"])([_autoprefixer[\"default\"]])).pipe((0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie11'\n  })).pipe(_gulpSourcemaps[\"default\"].write()).pipe((0, _gulp.dest)('dist/css')).pipe(server.stream());\n};\n\nexports.styles = styles;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)('src/js/scripts.js').pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: 'scripts.js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n};\n\nexports.scripts = scripts;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/img/**/*.{jpg,jpeg,png,svg,gif}').pipe((0, _gulpImagemin[\"default\"])()).pipe((0, _gulp.dest)('dist/img'));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/*']).pipe((0, _gulp.dest)('dist/'));\n};\n\nexports.copy = copy;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n  (0, _gulp.watch)(\"**/*.php\", reload);\n};\n\nexports.watchForChanges = watchForChanges;\nvar dev = (0, _gulp.series)((0, _gulp.parallel)(styles, images, scripts, copy), serve, watchForChanges, reload);\nexports.dev = dev;\n\nvar build = function build(done) {\n  (0, _gulp.series)((0, _gulp.parallel)(styles, images, copy, scripts));\n  done();\n};\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwic2VydmVyIiwiYnJvd3NlclN5bmMiLCJjcmVhdGUiLCJzZXJ2ZSIsImRvbmUiLCJpbml0IiwicHJveHkiLCJyZWxvYWQiLCJzdHlsZXMiLCJwaXBlIiwib24iLCJzYXNzIiwibG9nRXJyb3IiLCJhdXRvcHJlZml4ZXIiLCJjb21wYXRpYmlsaXR5Iiwic291cmNlbWFwcyIsIndyaXRlIiwic3RyZWFtIiwic2NyaXB0cyIsIm1vZHVsZSIsInJ1bGVzIiwidGVzdCIsInVzZSIsImxvYWRlciIsIm9wdGlvbnMiLCJwcmVzZXRzIiwibW9kZSIsImRldnRvb2wiLCJvdXRwdXQiLCJmaWxlbmFtZSIsImltYWdlcyIsImNvcHkiLCJ3YXRjaEZvckNoYW5nZXMiLCJkZXYiLCJidWlsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHQyxrQkFBTUMsSUFBTixDQUFXQyxJQUE5Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWY7O0FBQ08sSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUMsSUFBSSxFQUFJO0FBQzNCSixFQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWTtBQUNWQyxJQUFBQSxLQUFLLEVBQUU7QUFERyxHQUFaO0FBR0FGLEVBQUFBLElBQUk7QUFDTCxDQUxNOzs7O0FBTUEsSUFBTUcsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQUgsSUFBSSxFQUFJO0FBQzVCSixFQUFBQSxNQUFNLENBQUNPLE1BQVA7QUFDQUgsRUFBQUEsSUFBSTtBQUNMLENBSE07Ozs7QUFLQSxJQUFNSSxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQzFCLFNBQU8sZUFBSSxDQUFDLHFCQUFELENBQUosRUFDSkMsSUFESSxDQUNDLDRCQUFPQyxFQUFQLENBQVUsT0FBVixFQUFtQkMscUJBQUtDLFFBQXhCLENBREQsRUFFSkgsSUFGSSxDQUVDLDZCQUFRLENBQUVJLHdCQUFGLENBQVIsQ0FGRCxFQUdKSixJQUhJLENBR0MsOEJBQVM7QUFBQ0ssSUFBQUEsYUFBYSxFQUFDO0FBQWYsR0FBVCxDQUhELEVBSUpMLElBSkksQ0FJQ00sMkJBQVdDLEtBQVgsRUFKRCxFQUtKUCxJQUxJLENBS0MsZ0JBQUssVUFBTCxDQUxELEVBTUpBLElBTkksQ0FNQ1QsTUFBTSxDQUFDaUIsTUFBUCxFQU5ELENBQVA7QUFPRCxDQVJNOzs7O0FBVUEsSUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQVUsR0FBTTtBQUMzQixTQUFPLGVBQUksbUJBQUosRUFDTlQsSUFETSxDQUNELCtCQUFRO0FBQ1pVLElBQUFBLE1BQU0sRUFBRTtBQUNOQyxNQUFBQSxLQUFLLEVBQUUsQ0FDTDtBQUNFQyxRQUFBQSxJQUFJLEVBQUUsT0FEUjtBQUVFQyxRQUFBQSxHQUFHLEVBQUU7QUFDSEMsVUFBQUEsTUFBTSxFQUFFLGNBREw7QUFFSEMsVUFBQUEsT0FBTyxFQUFFO0FBQ1BDLFlBQUFBLE9BQU8sRUFBRTtBQURGO0FBRk47QUFGUCxPQURLO0FBREQsS0FESTtBQWNaQyxJQUFBQSxJQUFJLEVBQUU5QixVQUFVLEdBQUcsWUFBSCxHQUFrQixhQWR0QjtBQWVaK0IsSUFBQUEsT0FBTyxFQUFFLENBQUMvQixVQUFELEdBQWMsbUJBQWQsR0FBb0MsS0FmakM7QUFnQlpnQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkMsTUFBQUEsUUFBUSxFQUFFO0FBREo7QUFoQkksR0FBUixDQURDLEVBcUJOcEIsSUFyQk0sQ0FxQkQsZ0JBQUssU0FBTCxDQXJCQyxDQUFQO0FBc0JELENBdkJNOzs7O0FBeUJBLElBQU1xQixNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQzFCLFNBQU8sZUFBSSxxQ0FBSixFQUNKckIsSUFESSxDQUNDLCtCQURELEVBRUpBLElBRkksQ0FFQyxnQkFBSyxVQUFMLENBRkQsQ0FBUDtBQUdELENBSk07Ozs7QUFNQSxJQUFNc0IsSUFBSSxHQUFHLFNBQVBBLElBQU8sR0FBTTtBQUN4QixTQUFPLGVBQUksQ0FBQyxVQUFELEVBQVksdUJBQVosRUFBb0MseUJBQXBDLENBQUosRUFDSnRCLElBREksQ0FDQyxnQkFBSyxPQUFMLENBREQsQ0FBUDtBQUVELENBSE07Ozs7QUFLQSxJQUFNdUIsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixHQUFNO0FBQ25DLG1CQUFNLG9CQUFOLEVBQTRCLGtCQUFPeEIsTUFBUCxFQUFlRCxNQUFmLENBQTVCO0FBQ0EsbUJBQU0sd0NBQU4sRUFBZ0Qsa0JBQU91QixNQUFQLEVBQWV2QixNQUFmLENBQWhEO0FBQ0EsbUJBQU0sQ0FBQyxVQUFELEVBQVksdUJBQVosRUFBb0MsNEJBQXBDLENBQU4sRUFBeUUsa0JBQU93QixJQUFQLEVBQWF4QixNQUFiLENBQXpFO0FBQ0EsbUJBQU0sZ0JBQU4sRUFBd0Isa0JBQU9XLE9BQVAsRUFBZ0JYLE1BQWhCLENBQXhCO0FBQ0EsbUJBQU0sVUFBTixFQUFrQkEsTUFBbEI7QUFDRCxDQU5NOzs7QUFRQSxJQUFNMEIsR0FBRyxHQUFHLGtCQUFPLG9CQUFTekIsTUFBVCxFQUFpQnNCLE1BQWpCLEVBQXlCWixPQUF6QixFQUFrQ2EsSUFBbEMsQ0FBUCxFQUFnRDVCLEtBQWhELEVBQXVENkIsZUFBdkQsRUFBd0V6QixNQUF4RSxDQUFaOzs7QUFFQSxJQUFNMkIsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQTlCLElBQUksRUFBSTtBQUM1QixvQkFBTyxvQkFBU0ksTUFBVCxFQUFpQnNCLE1BQWpCLEVBQXlCQyxJQUF6QixFQUErQmIsT0FBL0IsQ0FBUDtBQUNBZCxFQUFBQSxJQUFJO0FBQ0osQ0FITTs7O2VBS1E2QixHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9nZW9mZi9TaXRlcy9HZW9mZi9hcHAvcHVibGljL3dwLWNvbnRlbnQvdGhlbWVzL3YwMiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNyYywgZGVzdCwgd2F0Y2gsIHNlcmllcywgcGFyYWxsZWwgfSBmcm9tICdndWxwJztcbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7XG5pbXBvcnQgc2FzcyBmcm9tICdndWxwLXNhc3MnO1xuaW1wb3J0IGNsZWFuQ3NzIGZyb20gJ2d1bHAtY2xlYW4tY3NzJztcbmltcG9ydCBwb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XG5pbXBvcnQgc291cmNlbWFwcyBmcm9tICdndWxwLXNvdXJjZW1hcHMnO1xuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tICdhdXRvcHJlZml4ZXInO1xuaW1wb3J0IHdlYnBhY2sgZnJvbSAnd2VicGFjay1zdHJlYW0nO1xuaW1wb3J0IGd1bHBpZiBmcm9tICdndWxwLWlmJztcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcbmltcG9ydCBicm93c2VyU3luYyBmcm9tIFwiYnJvd3Nlci1zeW5jXCI7XG5cbmNvbnN0IFBST0RVQ1RJT04gPSB5YXJncy5hcmd2LnByb2Q7XG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcbmV4cG9ydCBjb25zdCBzZXJ2ZSA9IGRvbmUgPT4ge1xuICBzZXJ2ZXIuaW5pdCh7XG4gICAgcHJveHk6IFwiaHR0cDovL2dlb2ZmLmRldlwiXG4gIH0pO1xuICBkb25lKCk7XG59O1xuZXhwb3J0IGNvbnN0IHJlbG9hZCA9IGRvbmUgPT4ge1xuICBzZXJ2ZXIucmVsb2FkKCk7XG4gIGRvbmUoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoWydzcmMvc2Nzcy9zdHlsZS5zY3NzJ10pXG4gICAgLnBpcGUoc2FzcygpLm9uKCdlcnJvcicsIHNhc3MubG9nRXJyb3IpKVxuICAgIC5waXBlKHBvc3Rjc3MoWyBhdXRvcHJlZml4ZXIgXSkpXG4gICAgLnBpcGUoY2xlYW5Dc3Moe2NvbXBhdGliaWxpdHk6J2llMTEnfSkpXG4gICAgLnBpcGUoc291cmNlbWFwcy53cml0ZSgpKVxuICAgIC5waXBlKGRlc3QoJ2Rpc3QvY3NzJykpXG4gICAgLnBpcGUoc2VydmVyLnN0cmVhbSgpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNjcmlwdHMgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoJ3NyYy9qcy9zY3JpcHRzLmpzJylcbiAgLnBpcGUod2VicGFjayh7XG4gICAgbW9kdWxlOiB7XG4gICAgICBydWxlczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGVzdDogL1xcLmpzJC8sXG4gICAgICAgICAgdXNlOiB7XG4gICAgICAgICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICBwcmVzZXRzOiBbXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgbW9kZTogUFJPRFVDVElPTiA/ICdwcm9kdWN0aW9uJyA6ICdkZXZlbG9wbWVudCcsXG4gICAgZGV2dG9vbDogIVBST0RVQ1RJT04gPyAnaW5saW5lLXNvdXJjZS1tYXAnIDogZmFsc2UsXG4gICAgb3V0cHV0OiB7XG4gICAgICBmaWxlbmFtZTogJ3NjcmlwdHMuanMnXG4gICAgfSxcbiAgfSkpXG4gIC5waXBlKGRlc3QoJ2Rpc3QvanMnKSk7XG59XG5cbmV4cG9ydCBjb25zdCBpbWFnZXMgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoJ3NyYy9pbWcvKiovKi57anBnLGpwZWcscG5nLHN2ZyxnaWZ9JylcbiAgICAucGlwZShpbWFnZW1pbigpKVxuICAgIC5waXBlKGRlc3QoJ2Rpc3QvaW1nJykpO1xufVxuXG5leHBvcnQgY29uc3QgY29weSA9ICgpID0+IHtcbiAgcmV0dXJuIHNyYyhbJ3NyYy8qKi8qJywnIXNyYy97aW1hZ2VzLGpzLHNjc3N9JywnIXNyYy97aW1hZ2VzLGpzLHNjc3N9LyonXSlcbiAgICAucGlwZShkZXN0KCdkaXN0LycpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHdhdGNoRm9yQ2hhbmdlcyA9ICgpID0+IHtcbiAgd2F0Y2goJ3NyYy9zY3NzLyoqLyouc2NzcycsIHNlcmllcyhzdHlsZXMsIHJlbG9hZCkpO1xuICB3YXRjaCgnc3JjL2ltYWdlcy8qKi8qLntqcGcsanBlZyxwbmcsc3ZnLGdpZn0nLCBzZXJpZXMoaW1hZ2VzLCByZWxvYWQpKTtcbiAgd2F0Y2goWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzY3NzfScsJyFzcmMve2ltYWdlcyxqcyxzY3NzfS8qKi8qJ10sIHNlcmllcyhjb3B5LCByZWxvYWQpKTtcbiAgd2F0Y2goJ3NyYy9qcy8qKi8qLmpzJywgc2VyaWVzKHNjcmlwdHMsIHJlbG9hZCkpO1xuICB3YXRjaChcIioqLyoucGhwXCIsIHJlbG9hZCk7XG59XG5cbmV4cG9ydCBjb25zdCBkZXYgPSBzZXJpZXMocGFyYWxsZWwoc3R5bGVzLCBpbWFnZXMsIHNjcmlwdHMsIGNvcHkpLCBzZXJ2ZSwgd2F0Y2hGb3JDaGFuZ2VzLCByZWxvYWQpO1xuXG5leHBvcnQgY29uc3QgYnVpbGQgPSBkb25lID0+IHtcblx0c2VyaWVzKHBhcmFsbGVsKHN0eWxlcywgaW1hZ2VzLCBjb3B5LCBzY3JpcHRzKSk7XG5cdGRvbmUoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGRldjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "styles",
        "pipe",
        "on",
        "sass",
        "logError",
        "autoprefixer",
        "compatibility",
        "sourcemaps",
        "write",
        "stream",
        "scripts",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "images",
        "copy",
        "watchForChanges",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/geoff/Sites/Geoff/app/public/wp-content/themes/v02",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\nimport yargs from 'yargs';\nimport sass from 'gulp-sass';\nimport cleanCss from 'gulp-clean-css';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport autoprefixer from 'autoprefixer';\nimport webpack from 'webpack-stream';\nimport gulpif from 'gulp-if';\nimport imagemin from 'gulp-imagemin';\nimport browserSync from \"browser-sync\";\n\nconst PRODUCTION = yargs.argv.prod;\nconst server = browserSync.create();\nexport const serve = done => {\n  server.init({\n    proxy: \"http://geoff.dev\"\n  });\n  done();\n};\nexport const reload = done => {\n  server.reload();\n  done();\n};\n\nexport const styles = () => {\n  return src(['src/scss/style.scss'])\n    .pipe(sass().on('error', sass.logError))\n    .pipe(postcss([ autoprefixer ]))\n    .pipe(cleanCss({compatibility:'ie11'}))\n    .pipe(sourcemaps.write())\n    .pipe(dest('dist/css'))\n    .pipe(server.stream());\n}\n\nexport const scripts = () => {\n  return src('src/js/scripts.js')\n  .pipe(webpack({\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          use: {\n            loader: 'babel-loader',\n            options: {\n              presets: []\n            }\n          }\n        }\n      ]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: 'scripts.js'\n    },\n  }))\n  .pipe(dest('dist/js'));\n}\n\nexport const images = () => {\n  return src('src/img/**/*.{jpg,jpeg,png,svg,gif}')\n    .pipe(imagemin())\n    .pipe(dest('dist/img'));\n}\n\nexport const copy = () => {\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/*'])\n    .pipe(dest('dist/'));\n}\n\nexport const watchForChanges = () => {\n  watch('src/scss/**/*.scss', series(styles, reload));\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif}', series(images, reload));\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\n  watch('src/js/**/*.js', series(scripts, reload));\n  watch(\"**/*.php\", reload);\n}\n\nexport const dev = series(parallel(styles, images, scripts, copy), serve, watchForChanges, reload);\n\nexport const build = done => {\n\tseries(parallel(styles, images, copy, scripts));\n\tdone();\n};\n\nexport default dev;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577742702001
  }
}